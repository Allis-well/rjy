
【1】功能测试：
1、参与需求评审
2、输出测试方案
3、编写测试用例
4、组织用例评审——书写测试计划和测试执行集
5、参与需求测试
6、提交bug、跟踪bug解决进度
7、配合产品、设计进行验收
8、测试完成，输出测试总结报告

【2】黑盒测试和白盒测试：
黑盒测试（Black Box Testing）是一种测试方法，它把被测试软件看作一个黑盒子，
只关心软件的输入和输出，而忽略软件内部的实现细节。黑盒测试通常通过输入各种不同的数据、
使用各种场景和操作组合等方式，来验证软件是否能够正确地响应和输出预期的结果。
测试人员通常不需要知道被测试软件的具体实现和内部结构，只需要从用户的角度出发进行测试，
以发现软件中的功能性和非功能性问题。
白盒测试（White Box Testing）是一种测试方法，它需要测试人员了解被测试软件的内部结构和实现细节。
在白盒测试中，测试人员通常会根据软件的内部结构和实现细节，设计和执行一系列测试用例，
以验证软件内部的逻辑是否正确、代码是否符合标准等方面的问题。
白盒测试通常需要测试人员具备一定的编程和代码分析能力，以便深入了解软件的内部结构和实现方式，
从而更加全面地进行测试。
1、黑盒测试：功能性测试，不了解代码结构的前提下，根据功能设计用例，测试功能
2、白盒测试：结构性测试，明确代码流程的前提下，根据代码逻辑设计用例，进行用例覆盖  
黑盒=结构测试（单元测试），白盒=系统测试（功能测试），灰盒=集成测试（接口测试）

【3】测试微信的软件1.0版本
输入文本测试点：输入中英文、数字、符号、表情等各种类型的文本，测试是否能够正确输入并显示；
字数限制测试点：输入200字及以下、201字及以上的文本，测试是否能够正确限制字数；
界面响应测试点：测试在输入文本时，是否会出现闪退、卡顿、界面错位等异常情况；
显示效果测试点：测试文本的显示效果，包括字体、字号、颜色等是否符合要求；
输入边界测试点：测试输入空格、回车、换行等边界情况是否正确处理；
输入速度测试点：测试用户快速输入文本时，是否会出现丢字、串字等异常情况；
输入撤销测试点：测试是否支持输入撤销功能；
输入复制测试点：测试是否支持输入复制功能。
通过以上测试点的提取，可以设计并执行全面、高效、有效的测试用例，以验证该软件功能是否符合要求，从而提高软件的质量和用户体验。

【4】接口测试：
Postman：使用Script、Authorization
JMeter
Swagger
Fiddler
wireShark抓包

【5】数据包在网络中传输过程
封装数据：发送方将要传输的数据划分为合适的数据包，并在每个数据包的头部加上必要的信息，如源地址、目的地址、协议类型等。
选择路由：在数据包被发送到网络时，路由器会将数据包传送到下一个跳点，直到数据包到达目的地。
路由器转发：路由器会根据目的地址和路由表选择合适的路径将数据包转发到下一个跳点。
到达目的地：数据包最终到达目的地，并被解封装还原成原始数据。
确认数据传输：目的方会发送确认消息给发送方，以确保数据包已经正确地传输到目的地。

【6】TCP与UDP的区别
TCP ：
面向连接：在通信前，必须先建立连接，通过三次握手建立可靠的通信通道，确保数据的可靠传输。
可靠性：通过确认、序列号、重传机制等，保证数据的可靠传输，如果数据包丢失或损坏，会自动重传。
流式传输：将数据视为连续的字节流，在发送端和接收端之间保持数据的顺序，不会产生数据的边界。
拥塞控制：TCP通过拥塞窗口、滑动窗口等机制来控制网络拥塞，避免网络过载。
UDP：
无连接：在通信前不需要建立连接，直接发送数据包，没有握手过程，因此传输效率较高。
不可靠性：UDP不保证数据的可靠传输，数据包可能会丢失或乱序，不提供重传机制。
报文传输：UDP将数据划分为数据报文，每个数据报文都有自己的边界，接收端可以正确解析每个数据报文。
适用场景：适用于实时性要求高的应用，如音视频传输、在线游戏等。
TCP和UDP各有优势，在不同的应用场景下选择合适的传输协议，例如，需要可靠传输和顺序性的数据可以选择TCP，而对实时性要求较高的数据可以选择UDP。

【7】http基于什么传输层协议
HTTP（Hypertext Transfer Protocol）是一种应用层协议，它基于传输层协议进行数据传输。
HTTP的传输层协议可以是TCP或者UDP，但是由于HTTP需要保证数据传输的可靠性和顺序，通常使用TCP作为传输层协议。
TCP（Transmission Control Protocol）是一种面向连接的、可靠的传输层协议，它提供了数据确认、重传、流量控制等机制，
保证了数据传输的可靠性和有序性。在HTTP协议中，客户端和服务器之间建立TCP连接后，通过发送HTTP请求和响应消息进行数据传输，
TCP可以保证数据传输的可靠性和正确性。
因此，HTTP协议基于TCP传输层协议进行数据传输，使用TCP的可靠性保证，保证了数据传输的正确性和完整性，
适合于传输需要保证可靠性的网页、文件、图片等数据。同时，由于TCP的连接建立和维护需要耗费较多的资源和时间，
因此在需要快速响应的实时应用场景中，可能会选择使用基于UDP的传输层协议，如实时视频直播等。

【8】测试需要具备的能力
C/C++、java、python等； 自动化测试工具，如Selenium、Appium、Robotium等；
 计算机基础知识，如数据库、Linux、计算机网络等； 
测试框架，如JUnit，python+selenium+uinttest
接口测试使用jmeter、postman
性能测试使用jmeter
jira系统华为问题单dts系统 ，连接mysql、oracle，

需要具备的能力： 业务分析能力，分析整体业务流程、分析被测业务数据、分析被测系统架构、分析被测业务模块、分析测试所需资源、分析测试完成目标； 
缺陷洞察能力，一般缺陷的发现能力、隐性问题的发现能力、发现连带问题的能力、发现问题隐患的能力、尽早发现问题的能力、发现问题根源的能力； 
团队协作能力，合理进行人员分工、协助组员解决问题、配合完成测试任务、配合开发重现缺陷、督促项目整体进度、出现问题勇于承担； 
专业技术能力，掌握测试基础知识、掌握计算机知识、熟练运用测试工具； 逻辑思考能力，判断逻辑的正确性、对可行性逻辑分析、站在客观角度思考； 
问题解决能力，技术上的问题、工作中的问题、沟通问题；  沟通表达能力，和技术人员、产品人员、上下级的沟通； 
宏观把控能力，有效控制测试时间、有效控制测试成本、有效制定测试计划、有效进行风险评估、有效控制测试方向。

【9】黑盒白盒常用测试方法
黑盒：等价类划分法；边界值分析法；因果图法；场景法；正交实验设计法；判定表驱动分析法；错误推测法；功能图分析法。 
白盒：
  ①静态：不需要执行代码，如文档测试、代码检查等。
  ②动态，一般需要执行代码，接口测试、覆盖率分析、性能分析、内存分析等；
	逻辑覆盖法：路径覆盖(所有程序路径跑一遍)、判断覆盖(所有if结果跑一遍)、
	条件覆盖(所有判断条件的取值跑一遍)、判断/条件覆盖(同时满足判断和条件覆盖)、
	条件组合覆盖(所有条件的组合跑一遍)。 
  白盒还有程序打桩法

【10】自动化和手工的区别
手动测试:
缺点:
1.重复的手动测试，代价高
2.依赖于测试人员的能力。
优点:
1.可以依据测试人员的经验和对错误的猜测能力
2.测试人员具有审美能力和心理体验
3.测试人员具有逻辑推理能力和是非判断能力。
自动化测试:
优点:
1.减少时间和成本，提高资源利用率。
2.能够测试手动测试无法进行测试的板块
3.测试具有重复性、一致性和复用性
4.能够增加软件信任度。
缺点:
1.非常依赖测试质量
2.不能取代手动测试，查出的缺陷比手动测试更少
3.测试自动化不能提高有效性，还有可能制约软件开发
4.工具本身不具备想象力

【11】测试流程
 需求测试->概要设计测试->详细设计测试->单元测试->集成测试->系统测试->验收测试  来自W模型
搭建测试环境 撰写测试用例 执行测试用例 写测试计划，测试报告 测试，
并提交BUG表单 跟踪bug修改情况 执行自动化测试，编写脚本，执行，分析，报告 
进行性能测试，压力测试等其他测试，执行，分析，调优，报告

【12】ip地址划分
A类地址：第一个字节的最高位为0，7位用于网络标识，剩下的24位用于主机标识。A类地址范围为1.0.0.0到126.0.0.0。
B类地址：10，14位，16位。B类地址范围为128.0.0.0到191.255.0.0。
C类地址：110，21位，剩下的8位用于主机标识。C类地址范围为192.0.0.0到223.255.255.0。
D类地址：用于多点广播地址，其第一个字节的最高位必须为1110，后面28位用于标识。D类地址范围为224.0.0.0到239.255.255.255。
E类地址：保留地址，其第一个字节的最高位必须为1111，后面28位用于标识。E类地址范围为240.0.0.0到255.255.255.255。

A类私有地址：10.0.0.0到10.255.255.255
B类私有地址：172.16.0.0到172.31.255.255
C类私有地址：192.168.0.0到192.168.255.255


【13】软件质量的六个特征
功能特征，易用特征，效率特征，可移植特征，可靠特征，可维护特征

【14】测试网络协议
1、一致性测试：检测协议实现本身与协议规范的符合程度 
2、互操作性测试：基于某一协议检测不同协议实现间互操作互通信的能力 
3、性能测试：检测协议实现的性能指标，比如数据传输速度，连接时间，执行速度，吞吐量，并发度， 
4、健壮性测试：检测协议是现在各种恶劣环境下运行的能力，比如注入干扰报文，通信故障，信道被切断



【15】测开能力
软件测试基础理论知识，如黑盒测试、白盒测试等；
编程语言基础，java、python等；
自动化测试工具，如Selenium、Appium、Robotium等；
计算机基础知识，如数据库、Linux、计算机网络等；
测试框架，如JUnit等。  需要具备的能力：
业务分析能力，分析整体业务流程、分析被测业务数据、分析被测系统架构、分析被测业务模块、分析测试所需资源、分析测试完成目标；
缺陷洞察能力，一般缺陷的发现能力、隐性问题的发现能力、发现连带问题的能力、发现问题隐患的能力、尽早发现问题的能力、发现问题根源的能力；
团队协作能力，合理进行人员分工、协助组员解决问题、配合完成测试任务、配合开发重现缺陷、督促项目整体进度、出现问题勇于承担；
专业技术能力，掌握测试基础知识、掌握计算机知识、熟练运用测试工具；
逻辑思考能力，判断逻辑的正确性、对可行性逻辑分析、站在客观角度思考；
问题解决能力，技术上的问题、工作中的问题、沟通问题；
沟通表达能力，和技术人员、产品人员、上下级的沟通；
宏观把控能力，有效控制测试时间、有效控制测试成本、有效制定测试计划、有效进行风险评估、有效控制测试方向

【16】α测试和β测试
  α测试：【内测】在受控的环境中进行，由用户在开发者的场所进行，并且在开发者对用户的指导下进行测试，开发者负责记录发现的错误和使用中遇到的问题  
  β测试：【公测】在开发者不能控制的环境中的真实应用，由软件的最终用户们在一个或多个客户场所下进行，由用户记录在测试中遇到的一系列问题，并定期报给开发者。 

【17】字符串怎么判断是不是ip地址
1、根据.进行截断，split('.')，截断后数组有四个
2、第1段数字1-255，第[2,4]段数字0-255
3、每段数字0开头的为错，1个数字[0-9]，两个数字([1-9][0-9])，三个数字(1[0-9][0-9])|(2[0-4][0-9])|(25[0-5]))，后边重复三段(.(内容)){3}$
4、使用正则
String ipRegEx = "^([1-9]|([1-9][0-9])|(1[0-9][0-9])|(2[0-4][0-9])|(25[0-5]))(\\.([0-9]|([1-9][0-9])|(1[0-9][0-9])|(2[0-4][0-9])|(25[0-5]))){3}$"
ip_regex = r"^([1-9]|([1-9][0-9])|(1[0-9][0-9])|(2[0-4][0-9])|(25[0-5]))(\.([0-9]|([1-9][0-9])|(1[0-9][0-9])|(2[0-4][0-9])|(25[0-5]))){3}$"  # 只有一个/因为r是直接转

【18】一个数字怎么判别闰年
能整除4且不能整除100，或者能整除400；每四年一闰，400年多三天所以去除三个闰
if (year % 4 == 0 and year % 100 != 0) or (year % 400 == 0):

【19】微信用户界面登陆过程都需要做哪些分析
功能 界面 性能 易用  兼容 安全
1、功能测试：
	正确密码用户能正确登录；错误密码用户不能登录；登录用户成功后，能否正确跳转；登录失败后是否有错误提示
	用户名特殊字符和长度要求；密码长度和复杂度要求;太长如何处理，太短如何处理；什么都不输入登录
	注册功能、忘记密码功能、记住用户名和密码功能是否正确；验证码功能等链接是否正确
	不同登录方式进行登录（手机、微信、QQ、扫码）
2、UI测试：风格界面与UI设计一致；控件高度是否一致；颜色是否正确；文字简洁易懂
3、性能测试：登录页面加载时间合理；登录成功判断和跳转时间；模拟大量用户同时登陆，压力下能否正常登陆跳转
4、安全性测试：
	登录后生成的Cookie，是否是httponly ； 用户名和密码是否通过加密的方式发送给Web服务器；
	用户名和密码的验证，应该是用服务器端验证， 而不能单单是在客户端用javascript 验证
	用户名和密码的输入框，应该屏蔽SQL注入攻击；用户名和密码的的输入框，应该禁止输入脚本 （防止XSS攻击）
	防止暴力破解，检测是否有错误登陆的次数限制；
	是否支持多用户在同一机器上登录； 同一用户能否在多台机器上登录
5、可用性测试：是否可以全用键盘操作，是否有快捷键；输入用户名，密码后按回车，是否可以登陆；输入框能否可以以Tab键切换
6、兼容性测试：
	不同浏览器下能否显示正常且功能正常、显示正常且；不同的平台是否能正常工作，比如Windows、 Mac、移动设备上是否正常工作iphone, Andriod; 
	不同的分辨率下显示是否正常；不同语言环境显示正确

【20】微信点赞功能
一、功能测试
 1、点赞按钮功能正常；
 2、好友点赞提醒
 3、共同好友点赞提醒
      点赞列表增加用户
      点赞按钮变为已点赞
 4、取消点赞，点赞按钮、点赞列表、通知
 5、点赞用户是否在可见分组里
二、界面
 1、点赞按钮变化
 2、点赞显示是否正确，一行几个
 4、点赞是否按时间进行排序，头像对应的是否正确
三、性能测试
 1、网速快慢对其影响
 2、多人同时点赞，是否正确显示
 3、多用户同时取消点赞，是否正确显示
 4、弱网情况下点赞
四、安全性测试
 1、未登陆情况下是否有点赞提醒
五、兼容性测试
 1、安卓、苹果手机下的点赞提醒、显示
六、易用性测试
点赞功能和取消功能设计的是否符合人性化，更加舒适

【21】如何测试一个杯子
一、功能：
 1、杯子直接装水是否漏水
 2、杯子装水到水位刻度线是否是刻度的容量
 3、杯子的盖子是否可以拧紧，拧紧之后倒立是否会漏水
 4、杯子如果是保温杯是否能保温；如果是普通杯子是否会烫手
二、性能：
 1、杯子能承受最高温度多少度
 2、杯子承受的最低温度多少度
 3、杯子盖子拧紧多少不会被倒出
 4、杯子的容量最大是多少不会溢出
 5、杯子的坚硬程度，从多高摔下或施加多大的力会损坏
 6、杯子的最大使用寿命
 7、杯子的保温时间有多长
三、安全性
 1、杯子的材质是否有毒
 2、杯子超过负荷后是否发生爆炸
 3、杯子低温高温材质是否释放有毒物质
四、界面
 1、杯子是否美观
 2、logo是否按照UI来设计的
 3、杯子的宽高是否与设计一样
 4、杯子的涂漆是否不易脱落
五、兼容性
 1、杯子是否可以转冰块、酒精、汽水等其他饮品或者液体
六、易用性
 1、杯子是否方便喝水
 2、杯子是否方便倒水
 3、杯子是否方便携带
 4、杯子是否防滑易抓取

【22】特殊验证
一、搜索框：结果正确，可翻页，可下拉，可排序
二、登录界面：忘记密码、注册、扫码登录
三、购物车：未登录将商品加入购物车或点击购物车菜单，页面跳转到登录页面，登录成功后购物车数量增加； 
	登录后所有链接是否跳转正确； 商品是否可以成功加入购物车；购物车商品总数是否有限制；商品总数是否正确；
	全选功能是否好用； 删除功能是否好用； 价格总计是否正确；商品文字太长时是否显示完整；店铺名字太长时是否显示完整；
	购物车中下架的商品是否有特殊标识；新加入购物车商品排序 ；商品删除后商品总数是否减少；购物车结算功能是否好用

【23】jMeter模拟高并发场景
吞吐量，平均响应时间
 1、对服务器进行压力测试、性能测试、接口测试
 2、对web进行压力测试
 3、Jmeter的用例格式为jmx文件，实际为xml格式
 4、线程组：模拟多个用户访问；线程数/Ramp-UP Period表示10个线程每间隔1s发送请求
 5、聚合报告，结果树：Sample(每个请求序号)、StartTime(请求时间)、ThreadName(线程名称)、Label(HTTP请求名称)、SampleTime(每个请求所花时间)

【24】Selenium+Python自动化测试对下拉菜单的定位 
 1、通过selenium.webdriver.support.ui的Select进行定位
	from selenium.webdriver.support.ui import Select  
	Select(driver.find_element_by_id("gender")).select_by_index(1)  
	Select(driver.find_element_by_id("gender")).select_by_value("2")  
	Select(driver.find_element_by_id("gender")).select_by_visible_text("Male")  
	# Select只对</select><select>标签的下拉菜单有效
2、定位非</select><select>标签的下拉菜单
	drop_down = driver.find_element_by_css_selector("div#select2_contner > ul")  
	drop_down.find_element_by_id("li2_input_2").click() 

【25】appium-unittest和python提供的断言方式：
	assertNotEqual(first, second, msg=None)；
	assertIn(first, second, msg=None)
	assertNotIn(first, second, msg=None)
	assertIsInstance(obj, cls, msg=None)
	assertNotIsInstance(obj, cls, msg=None)
	assertIs(type(obj), cls)

【26】弱网测试配置参数：
bandwidth —— 带宽，即上行、下行数据传输速度
utilisation —— 带宽可用率，大部分modern是100%
round-trip latency —— 第一个请求的时延，单位是ms
MTU —— 最大传输单元，即TCP包的最大size，可以更真实模拟TCP层，每次传输的分包情况
Releability —— 指连接的可靠性，这里指的是10kb的可靠率，用于模拟网络不稳定
Stability —— 连接稳定性，也会影响带宽可用性，用于模拟移动网络，移动网络连接一般不可靠
使用chrome的webview调试工具，节流模式，缺点是只适用于web页面的弱网模拟。

【27】测试网络？？？
ping、traceroute、nslookup

【28】印象最深的bug
我的自动化ci里调用了agent的批处理文件，批处理文件呢是模拟了linux的操作复制文件并启动linux的脚本文件startup.sh
某日我发现，启动后的产品服务没法连接Oracle数据库，这当然得报给底层组件团队
结果组件团队说没有问题，然后iServer就是这个上层产品测试我的问题不复现
我测试之后发现用ci跑会复现，用手动启用linux的脚本文件就能连接不复现，我就怀疑是startup.sh脚本的问题。
然后我对脚本进行了打桩和输出调试，结果最后是研发团队在调试的时候加入了一个参数have_tty参数，意思是没有交互界面就不执行其中的某些脚本文件
交互界面have_tty交互界面

【29】击微博的关注图标但是app上面没有反应
1、检查网络原因，是否是手机断网
2、换其他设备对功能进行测试
3、抓包检查点击关注按钮后前端是否发出请求
4、抓包检查后端返回消息
5、如果是浏览器，刷新或清除缓存进入无痕模式再试

【30】定位问题能够，但出现都能修改的时候出现更改意见分歧
CCB评审会议，一般SE(System Engineer)来定夺，以符合功能、安全性、性能、可测试性、可维护性的要求下尽量小的代价
我是mde+FO(Module Design Engineer)+普通程序员的身份，我写文档


【31】代码算法
1、如何判断单向链表是否有环：快慢指针
2、如何判断两个链表是否相交：长度相差，长的指针先走差len
3、循环链表插入元素：两指针指向头尾连接，两个指针指向第1、2个
4、合并两个排序数组：merge函数，左右指针，三个while循环
5、最大子数组问题：








