

需求分析：
1、需求层次类别
	业务、用户、系统（功能、非功能、设计约束）
	非功能性需求分类（P I[DAV] E C E S）
2、需求获取
    联合需求计划（JRP）:高度组织的群体会议，各方参与，成本较高。
		在JRP实施之前，应制定详细的议程，并严格按议程进行；
		按既定的时间安排进行；
		尽量完整地记录会议期间的内容；
		在讨论期间尽量避免使用专业术语；
		充分运用解决冲突的技能；
		会议期间设定充分的间歇时间；
		鼓励团队取得一致的意见；
		保证参加JRP的所有人员能够遵守事先约定的规则。
	用户访谈：1~3人，前期准备：需要问的问题、知识储备、注重细节、做好记录
	现场观摩
	参加业务实践
	问卷调查
	抽样调查
3、面向对象需求分析
    对象=对象id + 属性(数据)+方法(操作)；
    类=属性+方法；实体类（数据库存储）、控制类（动宾结构短语-用例）、边界类（内外流动的信息和数据流）
	

    
REST 的五个原则：1.网络上的所有事物都被抽象为资源；2.每个资源对应一个唯一的资源标识；3.通过通用的连接件接口对资
源进行操作；4.对资源的各种操作不会改变资源标识；5.所有的操作都是无状态的

软件开发：
1、原型模型（需求不明确）
2、瀑布模型（线性书序连接，需求分析、设计、编码、运行与维护，需求明确或二次开发）
3、增量模型（瀑布模型的基本+原型的迭代）


WEB开发：
1、负载均衡
    静态算法：轮转算法、加权轮转算法、源地址哈希散列算法、目标地址哈希散列算法、随机算法（轮加源目随）
    动态算法：最小连接数算法、加权最小连接数算法、加权百分比算法（连加百）

2、负载均衡技术：
	（1）应用层负载均衡：http 重定向、反向代理服务器；（2）传输层负载均衡：DNS 域名解析负载均
衡、基于 NAT 的负载均衡；（3）硬件负载均衡：F5；（6）软件负载均衡：LVS、Nginx、HAproxy

系统设计：
1、软件维护类别
    改、适、完、预
2、可维护性因素
    可理、修、测、靠、移植

成本效益分析：
1、成本 固定、变动、混合成本、直接成本、间接成本
    
2、收益：显示、隐式

可行性分析：
	经 技 用 法（管、运）

UML
事物：
	结构（结构事物在模型中属于最静态的部分，代表概念上或物理上的元素。UML 有七种结构事物，分别是类、接口、协作、用例、活动类、构件和节点）
	行为（行为事物是 UML 模型中的动态部分，代表时间和空间上的动作。UML 有两种主要的行为事物。交互和状态机）
	分组（分组事物是 UML 模型中组织的部分，可以把它们看成是个盒子，模型可以在其中进行分解。一种：包）
	注释（注释事物是 UML 模型的解释部分）
类图、对象图、构件、部署图、制品图、包图、组合结构图
用、顺、通、定、交、状、活

1、活动图：特殊状态图，活动图将进程或其他计算结构展示为计算内部一步步的控制流和数据流。活动图专注于系统的动态视图。它对系统的功能建模和业务流程建模特别重要，并强调对象间的控制流程。类似程序流程图，并行行为。
2、顺序图：顺序图是一种交互图，它强调对象之间消息发送的顺序，同时显示对象之间的交互。强调按时间顺序。
3、状态图：状态图描述一个状态机，它由状态、转移、事件和活动组成。状态图给出了对象的动态视图。它对于接口、类或协作的行为建模尤为重要，而且它强调事件导致的对象行为，这非常有助于对反应式系统建模。状态转换变迁